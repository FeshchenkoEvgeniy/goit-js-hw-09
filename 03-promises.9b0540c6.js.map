{"mappings":"AACaA,SAASC,cAAc,SAE/BC,iBAAiB,UAItB,SAAiBC,GACfA,EAAIC,iBACJ,MACEC,UAAUC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAIM,cACRC,QAAQC,IAAIL,EAAMM,OAClBF,QAAQC,IAAIJ,EAAKK,OACjBF,QAAQC,IAAIH,EAAOI,M","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onClick);\n\nlet counterPosition = 0;\nlet stepCounter = 0;\nfunction onClick(evt) {\n  evt.preventDefault();\n  const {\n    elements: { delay, step, amount }\n  } = evt.currentTarget;\n  console.log(delay.value);\n  console.log(step.value);\n  console.log(amount.value);\n  // for(let i = 0; i < amount.value; i +=1 ){\n  //   counterPosition += 1\n    // stepCounter = delay.value + step.value;\n  //   createPromise(step.value, delay.value).then(({ step, delay }) => {\n  //   console.log(`✅ Fulfilled promise ${step} in ${delay}ms`);\n  // })\n  // .catch(({ step, delay }) => {\n  //   console.log(`❌ Rejected promise ${step} in ${delay}ms`);\n  // });\n  // // }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resoleve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n    resoleve(console.log(position, delay))\n  } else {\n    reject(console.log(position, delay))\n  }\n  }, delay)\n   });\n   console.log(promise)\n   return promise;\n}\n\n"],"names":["document","querySelector","addEventListener","evt","preventDefault","elements","delay","step","amount","currentTarget","console","log","value"],"version":3,"file":"03-promises.9b0540c6.js.map"}